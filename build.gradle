plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'com.gateway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

//tasks.withType(JavaCompile).each {
//	it.options.compilerArgs.add('--enable-preview')
//}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.pi4j:pi4j-core:1.2'

	implementation 'io.github.graphql-java:graphql-java-annotations:8.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'com.google.jimfs:jimfs:1.2'
}

test {
	// jvmArgs '--enable-preview'
	useJUnitPlatform()
}

//jar {
//	manifest {
//		attributes(
//				'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
//				'Main-Class': 'com.gateway.dashboard.DashboardApplication'
//		)
//	}
//}

// Executable jars can be built using the bootJar task. The task is automatically created when the java plugin is applied
bootJar {
	mainClass.set("DashboardApplication")
}